[{"/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/index.js":"1","/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/serviceWorker.js":"2","/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/App.js":"3","/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/components/Layout.js":"4","/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/utils/events.js":"5","/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/components/LoginForm.js":"6","/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/components/chats/ChatContainer.js":"7","/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/components/chats/ChatHeading.js":"8","/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/components/chats/SideBar.js":"9","/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/components/messages/MessageInput.js":"10","/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/components/messages/Messages.js":"11"},{"size":481,"mtime":1602887243130,"results":"12","hashOfConfig":"13"},{"size":5086,"mtime":1602555909214,"results":"14","hashOfConfig":"13"},{"size":187,"mtime":1602890681474,"results":"15","hashOfConfig":"13"},{"size":1244,"mtime":1606263040886,"results":"16","hashOfConfig":"13"},{"size":291,"mtime":1602897261683,"results":"17","hashOfConfig":"13"},{"size":1528,"mtime":1604715527905,"results":"18","hashOfConfig":"13"},{"size":2944,"mtime":1608412444189,"results":"19","hashOfConfig":"13"},{"size":543,"mtime":1608438755281,"results":"20","hashOfConfig":"13"},{"size":2400,"mtime":1608439025103,"results":"21","hashOfConfig":"13"},{"size":236,"mtime":1608412891407,"results":"22","hashOfConfig":"13"},{"size":1178,"mtime":1608416482836,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"2lw6vh",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/index.js",[],["50","51"],"/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/serviceWorker.js",[],"/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/App.js",[],"/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/components/Layout.js",["52"],"import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport { USER_CONNECTED, LOGOUT } from \"../utils/events\";\nimport LoginForm from \"./LoginForm\";\nimport ChatContainer from \"./chats/ChatContainer\";\n\nconst socketUrl = \"http://localhost:3231\";\nexport default class Layout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      socket: null,\n    };\n  }\n\n  componentWillMount() {\n    this.initSocket();\n  }\n\n  initSocket = () => {\n    const socket = io(socketUrl);\n    socket.on(\"connect\", () => {\n      console.log(\"connected\");\n    });\n    this.setState({ socket });\n  };\n\n  setUser = (user) => {\n    const { socket } = this.state;\n    socket.emit(USER_CONNECTED, user);\n    this.setState({ user });\n  };\n\n  logout = () => {\n    const { socket } = this.state;\n    socket.emit(LOGOUT);\n    this.setState({ user: null });\n  };\n\n  render() {\n    const { title } = this.props;\n    const { socket, user } = this.state;\n    return (\n      <div className=\"container\">\n        {!user ? (\n          <LoginForm socket={socket} setUser={this.setUser} />\n        ) : (\n          <ChatContainer socket={socket} user={user} logout={this.logout} />\n        )}\n      </div>\n    );\n  }\n}\n","/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/utils/events.js",[],"/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/components/LoginForm.js",[],"/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/components/chats/ChatContainer.js",["53"],"import React, { Component } from \"react\";\nimport SideBar from \"./SideBar\";\nimport ChatHeading from \"./ChatHeading\";\nimport Messages from \"../messages/Messages\";\nimport MessageInput from \"../messages/MessageInput\";\n\nimport {\n  TYPING,\n  COMMUNITY_CHAT,\n  MESSAGE_SENT,\n  MESSAGE_RECIEVED,\n} from \"../../utils/events\";\n\nexport default class ChatContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chats: [],\n      activeChat: null,\n    };\n  }\n\n  componentDidMount() {\n    const { socket } = this.props;\n    socket.emit(COMMUNITY_CHAT, this.resetChat);\n  }\n\n  resetChat = (chat) => {\n    return this.addChat(chat, true);\n  };\n\n  addChat = (chat, reset) => {\n    const { socket } = this.props;\n    const { chats } = this.state;\n\n    const newChats = reset ? [chat] : [...chats, chat];\n    this.setState({ chats: newChats });\n\n    const messageEvent = `${MESSAGE_RECIEVED}-${chat.id}`;\n    const typingEvent = `${TYPING}-${chat.id}`;\n\n    socket.on(typingEvent, this.updateTypingInChat(chat.id));\n    socket.on(messageEvent, this.addMessageToChat(chat.id));\n  };\n\n  addMessageToChat = (chatId) => {\n    return (message) => {\n      const { chats } = this.state;\n      let newChats = chats.map((chat) => {\n        if (chat.id === chatId) chat.messages.push(message);\n        return chat;\n      });\n\n      this.setState({ chats: newChats });\n    };\n  };\n\n  updateTypingInChat = (chatId) => {};\n\n  setActiveChat = (activeChat) => {\n    this.setState({ activeChat });\n  };\n\n  sendMessage = (chatId, message) => {\n    const { socket } = this.props;\n    socket.emit(MESSAGE_SENT, { chatId, message });\n  };\n\n  sendTyping = (chatId, isTyping) => {\n    const { socket } = this.props;\n    socket.emit(TYPING, { chatId, isTyping });\n  };\n\n  render() {\n    const { user, logout } = this.props;\n    const { chats, activeChat } = this.state;\n    return (\n      <div className=\"container\">\n        <SideBar\n          logout={logout}\n          chats={this.state.chats}\n          user={user}\n          activeChat={this.state.activeChat}\n          setActiveChat={this.setActiveChat}\n        />\n\n        <div className=\"chat-room-container\">\n          {activeChat !== null ? (\n            <div className=\"chat-room\">\n              <ChatHeading name={activeChat.name} />\n              <Messages\n                messages={activeChat.messages}\n                user={user}\n                typingUsers={activeChat.typingUsers}\n              />\n              <MessageInput\n                sendMessage={(message) => {\n                  this.sendMessage(activeChat.id, message);\n                }}\n                sendTyping={(isTyping) => {\n                  this.sendTyping(activeChat.id, isTyping);\n                }}\n              />\n            </div>\n          ) : (\n            <div className=\"chat-room choose\">\n              <h3>Choose a chat!</h3>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/components/chats/ChatHeading.js",[],"/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/components/chats/SideBar.js",[],"/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/components/messages/MessageInput.js",[],"/Users/hunterh/Desktop/Code/React-Projects/chat-app/src/components/messages/Messages.js",[],["54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":43,"column":13,"nodeType":"62","messageId":"63","endLine":43,"endColumn":18},{"ruleId":"60","severity":1,"message":"64","line":77,"column":13,"nodeType":"62","messageId":"63","endLine":77,"endColumn":18},{"ruleId":"56","replacedBy":"65"},{"ruleId":"58","replacedBy":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'title' is assigned a value but never used.","Identifier","unusedVar","'chats' is assigned a value but never used.",["67"],["68"],"no-global-assign","no-unsafe-negation"]